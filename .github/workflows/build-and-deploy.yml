name: Docker Compose Build and Push

on:
  pull_request:
    branches:
      - master  # Trigger when a PR is raised to 'master'
  push:
    branches:
      - master  # Trigger when changes are pushed to 'master'

jobs:
  docker-compose-job:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Determine if it is a PR or a Merge
      - name: Check Event Type
        id: check_event
        run: |
          echo "event_name=${{ github.event_name }}" >> $GITHUB_ENV
          echo "action=${{ github.event.action }}" >> $GITHUB_ENV

      # Step 3: Build using Docker Compose
      - name: Build Docker Compose
        run: |
          docker compose -f docker-compose.yml build

      # Step 4: Log in to Docker Hub (only for merges)
      - name: Log in to Docker Hub
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Tag Docker Images
      - name: Tag Docker Images
        if: ${{ github.event_name == 'push' }}
        run: |
          # Replace 'app' with your actual service names from docker-compose.yml
          docker tag api:latest ${{ secrets.DOCKER_USERNAME }}/python-api:latest
          docker tag api:latest ${{ secrets.DOCKER_USERNAME }}/python-api:v2.0.0

      # Step 5: Push Docker Images
      - name: Push Docker Images
        if: ${{ github.event_name == 'push' }}
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/python-api:v2.0.0